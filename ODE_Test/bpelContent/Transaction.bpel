<!-- Transaction BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Wed Mar 12 18:00:06 EET 2014 -->
<bpel:process name="Transaction"
         targetNamespace="http://xmlns.trix.com/ws/bpel/transaction/process/"
         suppressJoinFailure="yes"
         xmlns:tns="http://xmlns.trix.com/ws/bpel/transaction/process/"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:svc="http://transaction5.bpel.ws.trix.com"
         >

    <!-- Import the client WSDL -->
	<bpel:import location="TransactionArtifacts.wsdl"
	   namespace="http://xmlns.trix.com/ws/bpel/transaction/process/" 
	   importType="http://schemas.xmlsoap.org/wsdl/" />
	<bpel:import location="transaction5.wsdl"
	   namespace="http://transaction5.bpel.ws.trix.com"
     importType="http://schemas.xmlsoap.org/wsdl/"/>
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
            partnerLinkType="tns:Transaction"
            myRole="TransactionProvider"/>       
        <bpel:partnerLink name="TransactionLink"
            partnerLinkType="svc:TransactionPLT"
            partnerRole="TransactionRole"/>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>        
        <bpel:variable name="input"
            messageType="tns:TransactionRequestMessage"/>
        <bpel:variable name="output"
            messageType="tns:TransactionResponseMessage"/>
        <bpel:variable name="updateDbRequestVariable"
            messageType="svc:updateDbRequest"/>
        <bpel:variable name="updateDbResponseVariable"
            messageType="svc:updateDbResponse"/>
        <bpel:variable name="endTransactionRequestVariable"
            messageType="svc:endTransactionRequest"/>
        <bpel:variable name="endTransactionResponseVariable"
            messageType="svc:endTransactionResponse"/>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        <bpel:receive name="receiveBegin" partnerLink="client"
            portType="tns:Transaction"
            operation="process" variable="input"
            createInstance="yes"/>
        <bpel:while name="Cycle">
          <bpel:condition>$input.payload/tns:input!='commit' and $input.payload/tns:input!='rollback'</bpel:condition>
          <bpel:scope name="CycleScope">
            <bpel:faultHandlers>
              <bpel:catch faultName="svc:StringException" faultVariable="StringExceptionVariable"
                faultMessageType="svc:StringException">
                <bpel:assign validate="no" name="AssignLitteralToInput"> <!-- 
                  <bpel:copy>
			              <bpel:from>
			                <bpel:literal>
			                  <tns:TransactionResponse xmlns:tns="http://xmlns.trix.com/ws/bpel/transaction/process/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
			                    <tns:input>
			                      rollback
			                    </tns:input>
			                  </tns:TransactionResponse>
			                </bpel:literal>
			              </bpel:from>
			              <bpel:to variable="input" part="payload"/>
			            </bpel:copy> -->
                  <bpel:copy>
                    <bpel:from>
                        <bpel:literal xml:space="preserve">rollback</bpel:literal>
                    </bpel:from>
                    <bpel:to part="payload" variable="input">
                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:input]]></bpel:query>
                    </bpel:to>
                  </bpel:copy>
                </bpel:assign>
              </bpel:catch>
            </bpel:faultHandlers>
            <bpel:sequence name="Update-Recive">
              <bpel:assign validate="no" name="AssignIputToUpdateDb"> <!-- 
                <bpel:copy>
                    <bpel:from>
                      <bpel:literal>
                        <impl:valuesString xmlns:impl="http://transaction5.bpel.ws.trix.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">impl:valuesString</impl:valuesString>
                      </bpel:literal>
                    </bpel:from>
                    <bpel:to variable="updateDbRequestVariable" part="valuesString"></bpel:to>
                </bpel:copy> -->
                <bpel:copy>
                    <bpel:from part="payload" variable="input">
                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:input]]></bpel:query>
                    </bpel:from>
                    <bpel:to part="valuesString" variable="updateDbRequestVariable"/>
                </bpel:copy>        
              </bpel:assign>                
              <bpel:invoke name="InvokeUpdateDb"
			          partnerLink="TransactionLink"
			          operation="updateDb"
			          portType="svc:TransactionFunctionalities"
			          inputVariable="updateDbRequestVariable"
			          outputVariable="updateDbResponseVariable"/>
			        <bpel:assign name="AssignUpdateDbToOutput">
			          <bpel:copy>
                  <bpel:from part="updateDbReturn" variable="updateDbResponseVariable"/>                  
                  <bpel:to part="payload" variable="output"/>
                </bpel:copy>
			        </bpel:assign>
			        <bpel:reply name="replyCycle" 
                partnerLink="client"
                portType="tns:Transaction"
                operation="process"
                variable="output">                
              </bpel:reply>
	            <bpel:receive name="receiveCycle" partnerLink="client"
		            portType="tns:Transaction"
		            operation="process"
		            variable="input"
		            createInstance="no"/>
		        </bpel:sequence>
		      </bpel:scope> 
        </bpel:while>
                        
        <bpel:assign validate="no" name="AssignInputToEndTransaction">
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:input]]></bpel:query>
                </bpel:from>
                <bpel:to part="endMethod" variable="endTransactionRequestVariable"/>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:input]]></bpel:query>
                </bpel:from>
                <bpel:to part="payload" variable="output"/>
            </bpel:copy>
        </bpel:assign>
        <bpel:invoke name="InvokeEndTransaction"
	             partnerLink="TransactionLink"
	             operation="endTransaction"
	             portType="svc:TransactionFunctionalities"
	             inputVariable="endTransactionRequestVariable"
	             outputVariable="endTransactionResponseVariable"/>
        <bpel:reply name="replyEnd" 
               partnerLink="client"
               portType="tns:Transaction"
               operation="process" 
               variable="output">
        </bpel:reply>
               
    </bpel:sequence>
</bpel:process>

